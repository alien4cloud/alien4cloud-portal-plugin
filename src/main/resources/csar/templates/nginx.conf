worker_processes  5;

error_log  logs/error.log  info;


events {
  worker_connections 128;
}

http {



    log_format addHeaderlog '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$request_body" "$http_Authorization" "$http_x_duid" "$http_x_ver" "$upstream_http_x_rqid" "$upstream_http_Access_Control_Allow_Origin"';
    lua_package_path '~/lua/?.lua;/usr/local/openresty/luajit/share/lua/5.1/nginx/?.lua;;';
    resolver {{ dnsResolver }} valid=30s ipv6=off local=on;
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 5;
    lua_need_request_body on;
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;
    lua_shared_dict prometheus_metrics 10M;
    include mime.types;
    
    # configuration de la taille du dictionnaire de "sessions" stockant les sessions (access_token, refresh_token inclus dans cette session)
    lua_shared_dict sessions 10m; # 1280 sessions de 8ko


    init_worker_by_lua '
          prometheus = require("prometheus").init("prometheus_metrics")
          metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
          metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
          metric_connections = prometheus:gauge("nginx_http_connections", "Number of HTTP connections", {"state"})
          metric_bytes = prometheus:counter("nginx_http_request_size_bytes", "Total size of incoming requests")
          metric_response_sizes = prometheus:histogram("nginx_http_response_size_bytes", "Size of HTTP responses", nil, {10,100,1000,10000,100000,1000000})
    ';
    log_by_lua '
          metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
          metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
          metric_response_sizes:observe(tonumber(ngx.var.bytes_sent))
          metric_bytes:inc(tonumber(ngx.var.request_length))
    ';

    # Add common server for Health-Check 
    server {
        listen 8000;

        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
        }
    }
    server {
        listen 8001;
        keepalive_timeout 10;
        send_timeout 10;
        add_header Strict-Transport-Security "max-age=15768000;";
        add_header X-Content-Type-Options "nosniff";
        ssl_session_tickets off;
        ssl_certificate /usr/local/openresty/nginx/ssl/nginx.crt;
        ssl_certificate_key /usr/local/openresty/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
        server_tokens off;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        client_header_buffer_size 128k;
        client_body_timeout 10;
        client_header_timeout 10;
        client_max_body_size 100K;
        large_client_header_buffers 4 16k;

        proxy_buffer_size          16k;
        proxy_buffers              4 16k;
        proxy_busy_buffers_size    32k;
        proxy_temp_file_write_size 32k;

        include /usr/local/openresty/nginx/conf/env/settings.conf;
        include /usr/local/openresty/nginx/conf/sites-enabled/8001-logout/*.conf;
    }
    server {
        listen 8002;
        keepalive_timeout 10;
        send_timeout 10;
        add_header Strict-Transport-Security "max-age=15768000;";
        add_header X-Content-Type-Options "nosniff";
        ssl_session_tickets off;
        ssl_certificate /usr/local/openresty/nginx/ssl/nginx.crt;
        ssl_certificate_key /usr/local/openresty/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
        server_tokens off;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        client_header_buffer_size 128k;
        client_body_timeout 10;
        client_header_timeout 10;
        client_max_body_size 100K;
        large_client_header_buffers 4 16k;

        proxy_buffer_size          16k;
        proxy_buffers              4 16k;
        proxy_busy_buffers_size    32k;
        proxy_temp_file_write_size 32k;

        include /usr/local/openresty/nginx/conf/env/settings.conf;
        include /usr/local/openresty/nginx/conf/sites-enabled/{{ uc_id }}/*.conf;
    }

